// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  emailVerified DateTime?
  name          String?
  password      String?
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  orders   Order[]
  cart     CartItem[]
  designs  Design[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String   @db.Text
  basePrice   Decimal  @db.Decimal(10, 2)
  material    String
  thickness   String
  maxWidth    Float
  maxHeight   Float
  images      Json
  featured    Boolean  @default(false)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]
  cartItems  CartItem[]
  designs    Design[]
}

model Design {
  id            String   @id @default(cuid())
  userId        String?
  productId     String
  designUrl     String
  previewUrl    String?
  dimensions    Json
  customText    String?
  estimatedCost Decimal  @db.Decimal(10, 2)
  status        String   @default("draft")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user       User?       @relation(fields: [userId], references: [id])
  product    Product     @relation(fields: [productId], references: [id])
  orderItems OrderItem[]
  cartItem   CartItem?
}

model CartItem {
  id        String   @id @default(cuid())
  userId    String
  productId String
  designId  String?  @unique
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product  @relation(fields: [productId], references: [id])
  design  Design?  @relation(fields: [designId], references: [id])

  @@unique([userId, productId, designId])
}

model Order {
  id                String      @id @default(cuid())
  userId            String?
  email             String
  status            OrderStatus @default(PENDING)
  subtotal          Decimal     @db.Decimal(10, 2)
  tax               Decimal     @db.Decimal(10, 2)
  shipping          Decimal     @db.Decimal(10, 2)
  total             Decimal     @db.Decimal(10, 2)
  shippingAddress   Json
  billingAddress    Json
  paymentIntentId   String?
  paymentMethod     String?
  trackingNumber    String?
  notes             String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  user       User?       @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  designId  String?
  quantity  Int
  price     Decimal @db.Decimal(10, 2)

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])
  design  Design? @relation(fields: [designId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  REFUNDED
}